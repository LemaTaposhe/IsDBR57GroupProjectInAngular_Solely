{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartItems = [];\n    this.cartCount = new BehaviorSubject(0);\n    this.cartItemCountSubject = new BehaviorSubject(0);\n    this.cartCount$ = this.cartCount.asObservable();\n    this.updateCartItemCount();\n  }\n  addToCart(product) {\n    const existingProduct = this.cartItems.find(item => item.productId === product.productId);\n    if (existingProduct) {\n      existingProduct.quantity += product.quantity;\n    } else {\n      this.cartItems.push(product);\n    }\n    this.cartCount.next(this.cartItems.length);\n  }\n  getCartItems() {\n    return this.cartItems;\n  }\n  getCartCount() {\n    return this.cartItems.length;\n  }\n  getCartItemCount() {\n    return this.cartItemCountSubject.asObservable();\n  }\n  updateCartItemCount() {\n    this.cartItemCountSubject.next(this.cartItems.length);\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","cartItems","cartCount","cartItemCountSubject","cartCount$","asObservable","updateCartItemCount","addToCart","product","existingProduct","find","item","productId","quantity","push","next","length","getCartItems","getCartCount","getCartItemCount","_","_2","factory","ɵfac","providedIn"],"sources":["G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\cart\\cart.service.ts"],"sourcesContent":["// src/app/services/cart.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Product } from '../product/product.model';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private cartItems: Product[] = [];\r\n  private cartCount = new BehaviorSubject<number>(0);\r\n  private cartItemCountSubject = new BehaviorSubject<number>(0);\r\n  cartCount$ = this.cartCount.asObservable();\r\n\r\n  constructor() {\r\n    this.updateCartItemCount();\r\n   }\r\n\r\n  addToCart(product: Product): void {\r\n    const existingProduct = this.cartItems.find(item => item.productId === product.productId);\r\n    if (existingProduct) {\r\n      existingProduct.quantity += product.quantity;\r\n    } else {\r\n      this.cartItems.push(product);\r\n    }\r\n    this.cartCount.next(this.cartItems.length);\r\n  }\r\n\r\n  getCartItems(): Product[] {\r\n    return this.cartItems;\r\n  }\r\n\r\n  getCartCount(): number {\r\n    return this.cartItems.length;\r\n  }\r\n\r\n  getCartItemCount(): Observable<number> {\r\n    return this.cartItemCountSubject.asObservable();\r\n  }\r\n\r\n  private updateCartItemCount(): void {\r\n    this.cartItemCountSubject.next(this.cartItems.length);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;AAOtC,OAAM,MAAOC,WAAW;EAMtBC,YAAA;IALQ,KAAAC,SAAS,GAAc,EAAE;IACzB,KAAAC,SAAS,GAAG,IAAIJ,eAAe,CAAS,CAAC,CAAC;IAC1C,KAAAK,oBAAoB,GAAG,IAAIL,eAAe,CAAS,CAAC,CAAC;IAC7D,KAAAM,UAAU,GAAG,IAAI,CAACF,SAAS,CAACG,YAAY,EAAE;IAGxC,IAAI,CAACC,mBAAmB,EAAE;EAC3B;EAEDC,SAASA,CAACC,OAAgB;IACxB,MAAMC,eAAe,GAAG,IAAI,CAACR,SAAS,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAKJ,OAAO,CAACI,SAAS,CAAC;IACzF,IAAIH,eAAe,EAAE;MACnBA,eAAe,CAACI,QAAQ,IAAIL,OAAO,CAACK,QAAQ;KAC7C,MAAM;MACL,IAAI,CAACZ,SAAS,CAACa,IAAI,CAACN,OAAO,CAAC;;IAE9B,IAAI,CAACN,SAAS,CAACa,IAAI,CAAC,IAAI,CAACd,SAAS,CAACe,MAAM,CAAC;EAC5C;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAAChB,SAAS;EACvB;EAEAiB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACjB,SAAS,CAACe,MAAM;EAC9B;EAEAG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAAChB,oBAAoB,CAACE,YAAY,EAAE;EACjD;EAEQC,mBAAmBA,CAAA;IACzB,IAAI,CAACH,oBAAoB,CAACY,IAAI,CAAC,IAAI,CAACd,SAAS,CAACe,MAAM,CAAC;EACvD;EAAC,QAAAI,CAAA,G;qBAlCUrB,WAAW;EAAA;EAAA,QAAAsB,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}