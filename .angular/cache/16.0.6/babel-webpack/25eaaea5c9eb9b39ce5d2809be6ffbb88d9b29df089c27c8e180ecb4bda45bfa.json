{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DivisionService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = environment.apiBaseUrl;\n  }\n  getAllDivisions() {\n    return this._http.get(this.url + '/Division/GetDivisions');\n  }\n  getDivisionById(id) {\n    return this._http.get(this.url + '/Division/GetDivisions/' + id);\n  }\n  createDivision(division) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.post(this.url + '/Division/InsertDivision/', division, httpOptions);\n  }\n  updateDivision(id, division) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.put(this.url + '/Division/UpdateDivision/' + id, division, httpOptions);\n  }\n  deleteDivisionById(id) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.delete(this.url + '/Division/DeleteDivision/' + id, httpOptions);\n  }\n  static #_ = this.ɵfac = function DivisionService_Factory(t) {\n    return new (t || DivisionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DivisionService,\n    factory: DivisionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","DivisionService","constructor","_http","url","apiBaseUrl","getAllDivisions","get","getDivisionById","id","createDivision","division","httpOptions","headers","post","updateDivision","put","deleteDivisionById","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\division\\division.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Division } from './division.model';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DivisionService {\r\n\r\n  private url: string = environment.apiBaseUrl;\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAllDivisions(): Observable<Division[]> {\r\n    return this._http.get<Division[]>(this.url + '/Division/GetDivisions');\r\n  }\r\n\r\n  getDivisionById(id: any): Observable<any> {\r\n    return this._http.get<Division[]>(this.url + '/Division/GetDivisions/' +id);\r\n  }\r\n\r\n  createDivision(division: Division): Observable<Division> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this._http.post<Division>(this.url + '/Division/InsertDivision/', division, httpOptions);\r\n  }\r\n\r\n  updateDivision(id: any, division: Division): Observable<Division> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this._http.put<Division>(this.url + '/Division/UpdateDivision/' +id, division, httpOptions);\r\n  }\r\n\r\n  deleteDivisionById(id: string): Observable<number> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this._http.delete<number>(this.url + '/Division/DeleteDivision/' +id, httpOptions);\r\n  }\r\n}\r\n\r\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,GAAG,GAAWJ,WAAW,CAACK,UAAU;EAEH;EAEzCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAa,IAAI,CAACH,GAAG,GAAG,wBAAwB,CAAC;EACxE;EAEAI,eAAeA,CAACC,EAAO;IACrB,OAAO,IAAI,CAACN,KAAK,CAACI,GAAG,CAAa,IAAI,CAACH,GAAG,GAAG,yBAAyB,GAAEK,EAAE,CAAC;EAC7E;EAEAC,cAAcA,CAACC,QAAkB;IAC/B,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACW,IAAI,CAAW,IAAI,CAACV,GAAG,GAAG,2BAA2B,EAAEO,QAAQ,EAAEC,WAAW,CAAC;EACjG;EAEAG,cAAcA,CAACN,EAAO,EAAEE,QAAkB;IACxC,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACa,GAAG,CAAW,IAAI,CAACZ,GAAG,GAAG,2BAA2B,GAAEK,EAAE,EAAEE,QAAQ,EAAEC,WAAW,CAAC;EACpG;EAEAK,kBAAkBA,CAACR,EAAU;IAC3B,MAAMG,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACe,MAAM,CAAS,IAAI,CAACd,GAAG,GAAG,2BAA2B,GAAEK,EAAE,EAAEG,WAAW,CAAC;EAC3F;EAAC,QAAAO,CAAA,G;qBA3BUlB,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvB,eAAe;IAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}