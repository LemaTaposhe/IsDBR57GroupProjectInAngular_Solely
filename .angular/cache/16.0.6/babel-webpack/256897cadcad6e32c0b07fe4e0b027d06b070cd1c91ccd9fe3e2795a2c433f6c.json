{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiBaseUrl}/cart`;\n    this.cartId = this.getCartId();\n  }\n  getCartId() {\n    let cartId = localStorage.getItem('cartId');\n    if (!cartId) {\n      cartId = uuidv4();\n      localStorage.setItem('cartId', cartId);\n    }\n    return cartId;\n  }\n  addProductToCart(productId, quantity, price) {\n    const cartItem = {\n      productId: productId,\n      quantity: quantity,\n      price: price,\n      cartId: this.cartId\n    };\n    return this.http.post(`${this.apiUrl}/add`, cartItem);\n  }\n  getCartItems() {\n    return this.http.get(`${this.apiUrl}/${this.cartId}/items`);\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","v4","uuidv4","CartService","constructor","http","apiUrl","apiBaseUrl","cartId","getCartId","localStorage","getItem","setItem","addProductToCart","productId","quantity","price","cartItem","post","getCartItems","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\cart\\cart.service.ts"],"sourcesContent":["\r\n// // src/app/cart/cart.service.ts\r\n// import { Injectable } from '@angular/core';\r\n// import { CartItem } from './cart-item.model'; // Adjust the import path if necessary\r\n// import { Product } from '../product/product.model';\r\n\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n// export class CartService {\r\n//   private cart: CartItem[] = [];\r\n\r\n//   addProductToCart(product: Product, quantity: number): void {\r\n//     const existingProduct = this.cart.find(p => p.product.productId === product.productId);\r\n//     if (existingProduct) {\r\n//       existingProduct.quantity += quantity;\r\n//     } else {\r\n//       this.cart.push({ product, quantity });\r\n//     }\r\n//   }\r\n\r\n//   getCartItems(): CartItem[] {\r\n//     return this.cart;\r\n//   }\r\n\r\n//   getCartItemCount(): number {\r\n//     return this.cart.reduce((total, item) => total + item.quantity, 0);\r\n//   }\r\n// }\r\n//-------------------------------------------------------------------------\r\n// src/app/cart/cart.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CartItem } from './cartItem.model';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = `${environment.apiBaseUrl}/cart`;\r\n  private cartId: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.cartId = this.getCartId();\r\n  }\r\n\r\n  private getCartId(): string {\r\n    let cartId = localStorage.getItem('cartId');\r\n    if (!cartId) {\r\n      cartId = uuidv4();\r\n      localStorage.setItem('cartId', cartId);\r\n    }\r\n    return cartId;\r\n  }\r\n\r\n  addProductToCart(productId: number, quantity: number, price: number): Observable<void> {\r\n    const cartItem: CartItem = {\r\n      productId: productId,\r\n      quantity: quantity,\r\n      price: price,\r\n      cartId: this.cartId\r\n    };\r\n    return this.http.post<void>(`${this.apiUrl}/add`, cartItem);\r\n  }\r\n\r\n  getCartItems(): Observable<CartItem[]> {\r\n    return this.http.get<CartItem[]>(`${this.apiUrl}/${this.cartId}/items`);\r\n  }\r\n}\r\n"],"mappings":"AAkCA,SAASA,WAAW,QAAQ,8BAA8B;AAE1D,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;;;AAKnC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,GAAGN,WAAW,CAACO,UAAU,OAAO;IAI/C,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;EAChC;EAEQA,SAASA,CAAA;IACf,IAAID,MAAM,GAAGE,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,IAAI,CAACH,MAAM,EAAE;MACXA,MAAM,GAAGN,MAAM,EAAE;MACjBQ,YAAY,CAACE,OAAO,CAAC,QAAQ,EAAEJ,MAAM,CAAC;;IAExC,OAAOA,MAAM;EACf;EAEAK,gBAAgBA,CAACC,SAAiB,EAAEC,QAAgB,EAAEC,KAAa;IACjE,MAAMC,QAAQ,GAAa;MACzBH,SAAS,EAAEA,SAAS;MACpBC,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA,KAAK;MACZR,MAAM,EAAE,IAAI,CAACA;KACd;IACD,OAAO,IAAI,CAACH,IAAI,CAACa,IAAI,CAAO,GAAG,IAAI,CAACZ,MAAM,MAAM,EAAEW,QAAQ,CAAC;EAC7D;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAa,GAAG,IAAI,CAACd,MAAM,IAAI,IAAI,CAACE,MAAM,QAAQ,CAAC;EACzE;EAAC,QAAAa,CAAA,G;qBA7BUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}