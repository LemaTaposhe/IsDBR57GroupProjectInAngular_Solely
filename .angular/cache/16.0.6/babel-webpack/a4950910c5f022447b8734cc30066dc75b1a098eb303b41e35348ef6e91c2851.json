{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiBaseUrl}/cart`;\n  }\n  addProductToCart(cartId, productId, quantity, price) {\n    const cartPayload = {\n      cartId: cartId,\n      customerId: null,\n      items: [{\n        productId: productId,\n        quantity: quantity,\n        price: price\n      }]\n    };\n    return this.http.post(this.apiUrl, cartPayload).pipe(catchError(error => {\n      console.error('Error adding product to cart', error);\n      return of();\n    }));\n  }\n  updateCartItem(cartId, items) {\n    const updatePayload = {\n      cartId: cartId,\n      items: items\n    };\n    return this.http.put(`${this.apiUrl}/${cartId}`, updatePayload).pipe(catchError(error => {\n      console.error('Error updating cart items', error);\n      return of();\n    }));\n  }\n  getCartItems(cartId) {\n    return this.http.get(`${this.apiUrl}/${cartId}`).pipe(catchError(error => {\n      console.error('Error fetching cart items', error);\n      return of([]);\n    }));\n  }\n  clearCart(cartId) {\n    return this.http.delete(`${this.apiUrl}/${cartId}`).pipe(catchError(error => {\n      console.error('Error clearing cart', error);\n      return of();\n    }));\n  }\n  getCartItemCount(cartId) {\n    return this.getCartItems(cartId).pipe(map(items => items.reduce((total, item) => total + item.quantity, 0)), catchError(error => {\n      console.error('Error calculating cart item count', error);\n      return of(0);\n    }));\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","catchError","map","environment","CartService","constructor","http","apiUrl","apiBaseUrl","addProductToCart","cartId","productId","quantity","price","cartPayload","customerId","items","post","pipe","error","console","updateCartItem","updatePayload","put","getCartItems","get","clearCart","delete","getCartItemCount","reduce","total","item","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\cart\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { CartItem } from './cartItem.model'; // Adjust path\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = `${environment.apiBaseUrl}/cart`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addProductToCart(cartId: string, productId: number, quantity: number, price: number): Observable<void> {\r\n    const cartPayload = {\r\n      cartId: cartId, // Using provided cartId\r\n      customerId: null, // Or pass actual customerId if available\r\n      items: [\r\n        {\r\n          productId: productId,\r\n          quantity: quantity,\r\n          price: price\r\n        }\r\n      ]\r\n    };\r\n    return this.http.post<void>(this.apiUrl, cartPayload).pipe(\r\n      catchError(error => {\r\n        console.error('Error adding product to cart', error);\r\n        return of<void>();\r\n      })\r\n    );\r\n  }\r\n\r\n  updateCartItem(cartId: string, items: CartItem[]): Observable<void> {\r\n    const updatePayload = {\r\n      cartId: cartId,\r\n      items: items\r\n    };\r\n    return this.http.put<void>(`${this.apiUrl}/${cartId}`, updatePayload).pipe(\r\n      catchError(error => {\r\n        console.error('Error updating cart items', error);\r\n        return of<void>();\r\n      })\r\n    );\r\n  }\r\n\r\n  getCartItems(cartId: string): Observable<CartItem[]> {\r\n    return this.http.get<CartItem[]>(`${this.apiUrl}/${cartId}`).pipe(\r\n      catchError(error => {\r\n        console.error('Error fetching cart items', error);\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  clearCart(cartId: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${cartId}`).pipe(\r\n      catchError(error => {\r\n        console.error('Error clearing cart', error);\r\n        return of<void>();\r\n      })\r\n    );\r\n  }\r\n\r\n  getCartItemCount(cartId: string): Observable<number> {\r\n    return this.getCartItems(cartId).pipe(\r\n      map(items => items.reduce((total, item) => total + item.quantity, 0)),\r\n      catchError(error => {\r\n        console.error('Error calculating cart item count', error);\r\n        return of(0);\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}