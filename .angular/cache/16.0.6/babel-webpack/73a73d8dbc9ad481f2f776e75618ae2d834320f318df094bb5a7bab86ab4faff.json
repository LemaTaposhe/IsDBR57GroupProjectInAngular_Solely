{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../Login/auth.service\";\nimport * as i3 from \"../cart/cart.service\";\nimport * as i4 from \"../user/user.service\";\nimport * as i5 from \"@angular/common\";\nfunction CheckoutComponent_ng_container_3_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_container_3_div_6_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.checkoutForm.get(\"firstName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_container_3_div_11_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.checkoutForm.get(\"lastName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_container_3_div_16_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, CheckoutComponent_ng_container_3_div_16_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r8.checkoutForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r8.checkoutForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Address is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_container_3_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_container_3_div_21_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r9.checkoutForm.get(\"address\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction CheckoutComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function CheckoutComponent_ng_container_3_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onSubmitCheckout());\n    });\n    i0.ɵɵelementStart(2, \"div\", 10)(3, \"label\", 11);\n    i0.ɵɵtext(4, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 12);\n    i0.ɵɵtemplate(6, CheckoutComponent_ng_container_3_div_6_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10)(8, \"label\", 14);\n    i0.ɵɵtext(9, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 15);\n    i0.ɵɵtemplate(11, CheckoutComponent_ng_container_3_div_11_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 16);\n    i0.ɵɵtext(14, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 17);\n    i0.ɵɵtemplate(16, CheckoutComponent_ng_container_3_div_16_Template, 3, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 18);\n    i0.ɵɵtext(19, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"textarea\", 19);\n    i0.ɵɵtemplate(21, CheckoutComponent_ng_container_3_div_21_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 20);\n    i0.ɵɵtext(23, \"Checkout\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.checkoutForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r0.checkoutForm.get(\"firstName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r0.checkoutForm.get(\"firstName\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r0.checkoutForm.get(\"lastName\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r0.checkoutForm.get(\"lastName\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r0.checkoutForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r0.checkoutForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r0.checkoutForm.get(\"address\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r0.checkoutForm.get(\"address\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.checkoutForm.invalid);\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_template_4_div_5_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r17.registrationForm.get(\"firstName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_template_4_div_10_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r18.registrationForm.get(\"lastName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_template_4_div_15_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, CheckoutComponent_ng_template_4_div_15_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r19.registrationForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r19.registrationForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CheckoutComponent_ng_template_4_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CheckoutComponent_ng_template_4_div_20_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r20.registrationForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction CheckoutComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function CheckoutComponent_ng_template_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onRegister());\n    });\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"label\", 11);\n    i0.ɵɵtext(3, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 12);\n    i0.ɵɵtemplate(5, CheckoutComponent_ng_template_4_div_5_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 10)(7, \"label\", 14);\n    i0.ɵɵtext(8, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 15);\n    i0.ɵɵtemplate(10, CheckoutComponent_ng_template_4_div_10_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"label\", 16);\n    i0.ɵɵtext(13, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 17);\n    i0.ɵɵtemplate(15, CheckoutComponent_ng_template_4_div_15_Template, 3, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 23);\n    i0.ɵɵtext(18, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 24);\n    i0.ɵɵtemplate(20, CheckoutComponent_ng_template_4_div_20_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 10)(22, \"label\", 25);\n    i0.ɵɵtext(23, \"Active\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 20);\n    i0.ɵɵtext(26, \"Register\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.registrationForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.registrationForm.get(\"firstName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r2.registrationForm.get(\"firstName\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.registrationForm.get(\"lastName\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r2.registrationForm.get(\"lastName\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r2.registrationForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r2.registrationForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r2.registrationForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r2.registrationForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.registrationForm.invalid);\n  }\n}\nfunction CheckoutComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r28 = ctx.$implicit;\n    const i_r29 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r29 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r28.product.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r28.product.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", item_r28.product.price.toFixed(2), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r28.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", (item_r28.product.price * item_r28.quantity).toFixed(2), \"\");\n  }\n}\nfunction CheckoutComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.successMessage, \" \");\n  }\n}\nfunction CheckoutComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.errorMessage, \" \");\n  }\n}\nexport class CheckoutComponent {\n  constructor(fb, authService, cartService, userService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.cartService = cartService;\n    this.userService = userService;\n    this.isLoggedIn = false;\n    this.cartItems = []; // Adjust type as needed\n    this.successMessage = '';\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.authService.isAuthenticated();\n    if (this.isLoggedIn) {\n      this.initializeCheckoutForm();\n      this.populateFormFromLocalStorage();\n    } else {\n      this.initializeRegistrationForm();\n    }\n    // Retrieve cart items\n    this.cartItems = this.cartService.getCartItems();\n  }\n  initializeCheckoutForm() {\n    this.checkoutForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', Validators.required]\n    });\n  }\n  initializeRegistrationForm() {\n    this.registrationForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      isActive: [true]\n    });\n  }\n  populateFormFromLocalStorage() {\n    const userData = JSON.parse(localStorage.getItem('user') || '{}');\n    if (userData.fullname && userData.email) {\n      const [firstName, lastName] = userData.fullname.split(' ');\n      // Set form values\n      this.checkoutForm.patchValue({\n        firstName: firstName || '',\n        lastName: lastName || '',\n        email: userData.email || ''\n      });\n    }\n  }\n  getTotalPrice() {\n    return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\n  }\n  onSubmitCheckout() {\n    if (this.checkoutForm.valid) {\n      // Handle order submission logic for logged-in users\n      console.log('Order placed:', this.checkoutForm.value);\n      this.successMessage = 'Order placed successfully!';\n    }\n  }\n  onRegister() {\n    if (this.registrationForm.valid) {\n      const user = this.registrationForm.value;\n      this.userService.register(user).subscribe(response => {\n        this.successMessage = 'Registration successful!';\n        this.registrationForm.reset(); // Clear the form\n        this.registrationForm.get('isActive')?.setValue(true); // Set default value for checkbox\n        // Prepare user data for local storage and authentication service\n        const userData = {\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          password: '',\n          isActive: false\n        };\n        // Store user data in local storage and set user for authentication\n        localStorage.setItem('user', JSON.stringify(userData));\n        this.authService.setUser(userData);\n        // Update logged-in state and initialize checkout form\n        this.isLoggedIn = true;\n        this.initializeCheckoutForm();\n        this.populateFormFromLocalStorage();\n      }, error => {\n        console.error('Registration failed', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CheckoutComponent_Factory(t) {\n    return new (t || CheckoutComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.CartService), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckoutComponent,\n    selectors: [[\"app-checkout\"]],\n    decls: 31,\n    vars: 7,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"mb-3\"], [4, \"ngIf\", \"ngIfElse\"], [\"guestForm\", \"\"], [1, \"mt-4\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-success mt-3\", 4, \"ngIf\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"lastName\"], [\"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"address\"], [\"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-danger\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"isActive\"], [\"id\", \"isActive\", \"type\", \"checkbox\", \"formControlName\", \"isActive\"], [1, \"alert\", \"alert-success\", \"mt-3\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n    template: function CheckoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, CheckoutComponent_ng_container_3_Template, 24, 6, \"ng-container\", 2);\n        i0.ɵɵtemplate(4, CheckoutComponent_ng_template_4_Template, 27, 6, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"h3\");\n        i0.ɵɵtext(8, \"Cart Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"table\", 5)(10, \"thead\")(11, \"tr\")(12, \"th\");\n        i0.ɵɵtext(13, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Product Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"Total\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"tbody\");\n        i0.ɵɵtemplate(25, CheckoutComponent_tr_25_Template, 13, 6, \"tr\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 4)(27, \"h3\");\n        i0.ɵɵtext(28);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(29, CheckoutComponent_div_29_Template, 2, 1, \"div\", 7);\n        i0.ɵɵtemplate(30, CheckoutComponent_div_30_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isLoggedIn ? \"Checkout\" : \"User Registration\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cartItems);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Total Price: $\", ctx.getTotalPrice().toFixed(2), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","CheckoutComponent_ng_container_3_div_6_div_1_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r6","checkoutForm","get","errors","CheckoutComponent_ng_container_3_div_11_div_1_Template","ctx_r7","CheckoutComponent_ng_container_3_div_16_div_1_Template","CheckoutComponent_ng_container_3_div_16_div_2_Template","ctx_r8","tmp_1_0","CheckoutComponent_ng_container_3_div_21_div_1_Template","ctx_r9","ɵɵelementContainerStart","ɵɵlistener","CheckoutComponent_ng_container_3_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r16","ctx_r15","ɵɵnextContext","ɵɵresetView","onSubmitCheckout","ɵɵelement","CheckoutComponent_ng_container_3_div_6_Template","CheckoutComponent_ng_container_3_div_11_Template","CheckoutComponent_ng_container_3_div_16_Template","CheckoutComponent_ng_container_3_div_21_Template","ɵɵelementContainerEnd","ctx_r0","invalid","touched","tmp_2_0","tmp_3_0","tmp_4_0","CheckoutComponent_ng_template_4_div_5_div_1_Template","ctx_r17","registrationForm","CheckoutComponent_ng_template_4_div_10_div_1_Template","ctx_r18","CheckoutComponent_ng_template_4_div_15_div_1_Template","CheckoutComponent_ng_template_4_div_15_div_2_Template","ctx_r19","CheckoutComponent_ng_template_4_div_20_div_1_Template","ctx_r20","CheckoutComponent_ng_template_4_Template_form_ngSubmit_0_listener","_r27","ctx_r26","onRegister","CheckoutComponent_ng_template_4_div_5_Template","CheckoutComponent_ng_template_4_div_10_Template","CheckoutComponent_ng_template_4_div_15_Template","CheckoutComponent_ng_template_4_div_20_Template","ctx_r2","ɵɵtextInterpolate","i_r29","item_r28","product","name","description","ɵɵtextInterpolate1","price","toFixed","quantity","ctx_r4","successMessage","ctx_r5","errorMessage","CheckoutComponent","constructor","fb","authService","cartService","userService","isLoggedIn","cartItems","ngOnInit","isAuthenticated","initializeCheckoutForm","populateFormFromLocalStorage","initializeRegistrationForm","getCartItems","group","firstName","required","lastName","email","address","password","isActive","userData","JSON","parse","localStorage","getItem","fullname","split","patchValue","getTotalPrice","reduce","total","item","valid","console","log","value","user","register","subscribe","response","reset","setValue","setItem","stringify","setUser","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","CartService","i4","UserService","_2","selectors","decls","vars","consts","template","CheckoutComponent_Template","rf","ctx","CheckoutComponent_ng_container_3_Template","CheckoutComponent_ng_template_4_Template","ɵɵtemplateRefExtractor","CheckoutComponent_tr_25_Template","CheckoutComponent_div_29_Template","CheckoutComponent_div_30_Template","_r1"],"sources":["G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\checkout\\checkout.component.ts","G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\checkout\\checkout.component.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n// @Component({\n//   selector: 'app-checkout',\n//   templateUrl: './checkout.component.html',\n// })\n// export class CheckoutComponent implements OnInit {\n//   checkoutForm!: FormGroup;\n\n//   constructor(private fb: FormBuilder) {}\n\n//   ngOnInit(): void {\n//     this.initializeForm();\n\n//     // Retrieve data from localStorage\n//     const userData = JSON.parse(localStorage.getItem('user') || '{}');\n//     if (userData.fullname && userData.email) {\n//       const [firstName, lastName] = userData.fullname.split(' ');\n\n//       // Set form values\n//       this.checkoutForm.patchValue({\n//         firstName: firstName || '',\n//         lastName: lastName || '',\n//         email: userData.email || ''\n//       });\n//     }\n//   }\n\n//   initializeForm(): void {\n//     this.checkoutForm = this.fb.group({\n//       firstName: ['', Validators.required],\n//       lastName: ['', Validators.required],\n//       email: ['', [Validators.required, Validators.email]],\n//       address: ['', Validators.required]\n//     });\n//   }\n\n//   onSubmit(): void {\n//     if (this.checkoutForm.valid) {\n//       // Submit logic\n//       console.log(this.checkoutForm.value);\n//     }\n//   }\n// }\n//---------------------------------10 ta\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { AuthService } from '../Login/auth.service'; // Adjust path as needed\n// import { CartService } from '../cart/cart.service'; // Adjust path as needed\n\n// @Component({\n//   selector: 'app-checkout',\n//   templateUrl: './checkout.component.html',\n// })\n// export class CheckoutComponent implements OnInit {\n//   checkoutForm!: FormGroup;\n//   registrationForm!: FormGroup;\n//   isLoggedIn: boolean = false;\n//   cartItems: any[] = []; // Adjust type as needed\n//   successMessage: string = '';\n//   errorMessage: string = '';\n\n//   constructor(private fb: FormBuilder, private authService: AuthService, private cartService: CartService) {}\n\n//   ngOnInit(): void {\n//     this.isLoggedIn = this.authService.isAuthenticated();\n\n//     if (this.isLoggedIn) {\n//       this.initializeCheckoutForm();\n//       this.populateFormFromLocalStorage();\n//     } else {\n//       this.initializeRegistrationForm();\n//     }\n    \n//     // Retrieve cart items\n//     this.cartItems = this.cartService.getCartItems();\n//   }\n\n//   initializeCheckoutForm(): void {\n//     this.checkoutForm = this.fb.group({\n//       firstName: ['', Validators.required],\n//       lastName: ['', Validators.required],\n//       email: ['', [Validators.required, Validators.email]],\n//       address: ['', Validators.required]\n//     });\n//   }\n\n//   initializeRegistrationForm(): void {\n//     this.registrationForm = this.fb.group({\n//       firstName: ['', Validators.required],\n//       lastName: ['', Validators.required],\n//       email: ['', [Validators.required, Validators.email]],\n//       password: ['', Validators.required],\n//       isActive: [true]\n//     });\n//   }\n\n//   populateFormFromLocalStorage(): void {\n//     const userData = JSON.parse(localStorage.getItem('user') || '{}');\n//     if (userData.fullname && userData.email) {\n//       const [firstName, lastName] = userData.fullname.split(' ');\n\n//       // Set form values\n//       this.checkoutForm.patchValue({\n//         firstName: firstName || '',\n//         lastName: lastName || '',\n//         email: userData.email || ''\n//       });\n//     }\n//   }\n\n//   getTotalPrice(): number {\n//     return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\n//   }\n\n//   onSubmitCheckout(): void {\n//     if (this.checkoutForm.valid) {\n//       // Handle order submission logic for logged-in users\n//       console.log('Order placed:', this.checkoutForm.value);\n//       this.successMessage = 'Order placed successfully!';\n//     }\n//   }\n\n//   onRegister(): void {\n//     if (this.registrationForm.valid) {\n//       // Handle registration logic\n//       console.log('Registering user:', this.registrationForm.value);\n//       this.successMessage = 'Registration successful!';\n\n//       // Once registered, automatically log in and redirect to checkout\n//       this.authService.setUser(this.registrationForm.value);\n//       this.isLoggedIn = true;\n//       this.initializeCheckoutForm();\n//       this.populateFormFromLocalStorage();\n//     }\n//   }\n// }\n////////////////----------------11:45\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../user/user.service'; // Adjust path as needed\nimport { AuthService } from '../Login/auth.service'; // Adjust path as needed\nimport { CartService } from '../cart/cart.service'; // Adjust path as needed\nimport { User } from '../user/user.model'; // Adjust path as needed\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n})\nexport class CheckoutComponent implements OnInit {\n  checkoutForm!: FormGroup;\n  registrationForm!: FormGroup;\n  isLoggedIn: boolean = false;\n  cartItems: any[] = []; // Adjust type as needed\n  successMessage: string = '';\n  errorMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private cartService: CartService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.isLoggedIn = this.authService.isAuthenticated();\n    if (this.isLoggedIn) {\n      this.initializeCheckoutForm();\n      this.populateFormFromLocalStorage();\n    } else {\n      this.initializeRegistrationForm();\n    }\n    \n    // Retrieve cart items\n    this.cartItems = this.cartService.getCartItems();\n  }\n\n  initializeCheckoutForm(): void {\n    this.checkoutForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', Validators.required]\n    });\n  }\n\n  initializeRegistrationForm(): void {\n    this.registrationForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      isActive: [true]\n    });\n  }\n\n  populateFormFromLocalStorage(): void {\n    const userData = JSON.parse(localStorage.getItem('user') || '{}');\n    if (userData.fullname && userData.email) {\n      const [firstName, lastName] = userData.fullname.split(' ');\n\n      // Set form values\n      this.checkoutForm.patchValue({\n        firstName: firstName || '',\n        lastName: lastName || '',\n        email: userData.email || ''\n      });\n    }\n  }\n\n  getTotalPrice(): number {\n    return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\n  }\n\n  onSubmitCheckout(): void {\n    if (this.checkoutForm.valid) {\n      // Handle order submission logic for logged-in users\n      console.log('Order placed:', this.checkoutForm.value);\n      this.successMessage = 'Order placed successfully!';\n    }\n  }\n\n  onRegister(): void {\n    if (this.registrationForm.valid) {\n      const user: User = this.registrationForm.value;\n      this.userService.register(user).subscribe(\n        response => {\n          this.successMessage = 'Registration successful!';\n          this.registrationForm.reset(); // Clear the form\n          this.registrationForm.get('isActive')?.setValue(true); // Set default value for checkbox\n\n          // Prepare user data for local storage and authentication service\n          const userData: User = {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            password: '',\n            isActive: false\n          };\n\n          // Store user data in local storage and set user for authentication\n          localStorage.setItem('user', JSON.stringify(userData));\n          this.authService.setUser(userData);\n\n          // Update logged-in state and initialize checkout form\n          this.isLoggedIn = true;\n          this.initializeCheckoutForm();\n          this.populateFormFromLocalStorage();\n        },\n        error => {\n          console.error('Registration failed', error);\n        }\n      );\n    }\n  }\n}\n","<!-- <div class=\"container mt-4\">\n  <h2 class=\"mb-3\">Checkout</h2>\n\n  <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" />\n      <div *ngIf=\"checkoutForm.get('firstName')?.invalid && checkoutForm.get('firstName')?.touched\" class=\"text-danger\">\n        <div *ngIf=\"checkoutForm.get('firstName')?.errors?.['required']\">First Name is required.</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" />\n      <div *ngIf=\"checkoutForm.get('lastName')?.invalid && checkoutForm.get('lastName')?.touched\" class=\"text-danger\">\n        <div *ngIf=\"checkoutForm.get('lastName')?.errors?.['required']\">Last Name is required.</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input id=\"email\" formControlName=\"email\" class=\"form-control\" />\n      <div *ngIf=\"checkoutForm.get('email')?.invalid && checkoutForm.get('email')?.touched\" class=\"text-danger\">\n        <div *ngIf=\"checkoutForm.get('email')?.errors?.['required']\">Email is required.</div>\n        <div *ngIf=\"checkoutForm.get('email')?.errors?.['email']\">Invalid email format.</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"address\">Address</label>\n      <textarea id=\"address\" formControlName=\"address\" class=\"form-control\"></textarea>\n      <div *ngIf=\"checkoutForm.get('address')?.invalid && checkoutForm.get('address')?.touched\" class=\"text-danger\">\n        <div *ngIf=\"checkoutForm.get('address')?.errors?.['required']\">Address is required.</div>\n      </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"checkoutForm.invalid\">Checkout</button>\n  </form>\n</div>\n\n//----------------------------10 ta -->\n<!-- <div class=\"container mt-4\">\n  <h2 class=\"mb-3\">{{ isLoggedIn ? 'Checkout' : 'User Registration' }}</h2>\n\n  <ng-container *ngIf=\"isLoggedIn; else guestForm\">\n    <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmitCheckout()\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" />\n        <div *ngIf=\"checkoutForm.get('firstName')?.invalid && checkoutForm.get('firstName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('firstName')?.errors?.['required']\">First Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" />\n        <div *ngIf=\"checkoutForm.get('lastName')?.invalid && checkoutForm.get('lastName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('lastName')?.errors?.['required']\">Last Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input id=\"email\" formControlName=\"email\" class=\"form-control\" />\n        <div *ngIf=\"checkoutForm.get('email')?.invalid && checkoutForm.get('email')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('email')?.errors?.['required']\">Email is required.</div>\n          <div *ngIf=\"checkoutForm.get('email')?.errors?.['email']\">Invalid email format.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"address\">Address</label>\n        <textarea id=\"address\" formControlName=\"address\" class=\"form-control\"></textarea>\n        <div *ngIf=\"checkoutForm.get('address')?.invalid && checkoutForm.get('address')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('address')?.errors?.['required']\">Address is required.</div>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"checkoutForm.invalid\">Checkout</button>\n    </form>\n\n    \n  </ng-container>\n\n  <ng-template #guestForm>\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onRegister()\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('firstName')?.invalid && registrationForm.get('firstName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('firstName')?.errors?.['required']\">First Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('lastName')?.invalid && registrationForm.get('lastName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('lastName')?.errors?.['required']\">Last Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input id=\"email\" formControlName=\"email\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('email')?.invalid && registrationForm.get('email')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('email')?.errors?.['required']\">Email is required.</div>\n          <div *ngIf=\"registrationForm.get('email')?.errors?.['email']\">Invalid email format.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('password')?.invalid && registrationForm.get('password')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('password')?.errors?.['required']\">Password is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"isActive\">Active</label>\n        <input id=\"isActive\" type=\"checkbox\" formControlName=\"isActive\" />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"registrationForm.invalid\">Register</button>\n    </form>\n  </ng-template>\n\n  <div class=\"mt-4\">\n    <h3>Cart Details</h3>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Product Name</th>\n          <th>Description</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of cartItems; let i = index\">\n          <td>{{ i + 1 }}</td>\n          <td>{{ item.product.name }}</td>\n          <td>{{ item.product.description }}</td>\n          <td>${{ item.product.price.toFixed(2) }}</td>\n          <td>{{ item.quantity }}</td>\n          <td>${{ (item.product.price * item.quantity).toFixed(2) }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"mt-4\">\n      <h3>Total Price: ${{ getTotalPrice().toFixed(2) }}</h3>\n    </div>\n  </div>\n\n  <div *ngIf=\"successMessage\" class=\"alert alert-success mt-3\">\n    {{ successMessage }}\n  </div>\n\n</div> -->\n<!-- ------------------11:45 ta -->\n\n<div class=\"container mt-4\">\n  <h2 class=\"mb-3\">{{ isLoggedIn ? 'Checkout' : 'User Registration' }}</h2>\n\n  <ng-container *ngIf=\"isLoggedIn; else guestForm\">\n    <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmitCheckout()\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" />\n        <div *ngIf=\"checkoutForm.get('firstName')?.invalid && checkoutForm.get('firstName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('firstName')?.errors?.['required']\">First Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" />\n        <div *ngIf=\"checkoutForm.get('lastName')?.invalid && checkoutForm.get('lastName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('lastName')?.errors?.['required']\">Last Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input id=\"email\" formControlName=\"email\" class=\"form-control\" />\n        <div *ngIf=\"checkoutForm.get('email')?.invalid && checkoutForm.get('email')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('email')?.errors?.['required']\">Email is required.</div>\n          <div *ngIf=\"checkoutForm.get('email')?.errors?.['email']\">Invalid email format.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"address\">Address</label>\n        <textarea id=\"address\" formControlName=\"address\" class=\"form-control\"></textarea>\n        <div *ngIf=\"checkoutForm.get('address')?.invalid && checkoutForm.get('address')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"checkoutForm.get('address')?.errors?.['required']\">Address is required.</div>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"checkoutForm.invalid\">Checkout</button>\n    </form>\n\n  </ng-container>\n\n  <ng-template #guestForm>\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onRegister()\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('firstName')?.invalid && registrationForm.get('firstName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('firstName')?.errors?.['required']\">First Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('lastName')?.invalid && registrationForm.get('lastName')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('lastName')?.errors?.['required']\">Last Name is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input id=\"email\" formControlName=\"email\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('email')?.invalid && registrationForm.get('email')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('email')?.errors?.['required']\">Email is required.</div>\n          <div *ngIf=\"registrationForm.get('email')?.errors?.['email']\">Invalid email format.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\" />\n        <div *ngIf=\"registrationForm.get('password')?.invalid && registrationForm.get('password')?.touched\" class=\"text-danger\">\n          <div *ngIf=\"registrationForm.get('password')?.errors?.['required']\">Password is required.</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"isActive\">Active</label>\n        <input id=\"isActive\" type=\"checkbox\" formControlName=\"isActive\" />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"registrationForm.invalid\">Register</button>\n    </form>\n  </ng-template>\n\n  <div class=\"mt-4\">\n    <h3>Cart Details</h3>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Product Name</th>\n          <th>Description</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of cartItems; let i = index\">\n          <td>{{ i + 1 }}</td>\n          <td>{{ item.product.name }}</td>\n          <td>{{ item.product.description }}</td>\n          <td>${{ item.product.price.toFixed(2) }}</td>\n          <td>{{ item.quantity }}</td>\n          <td>${{ (item.product.price * item.quantity).toFixed(2) }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"mt-4\">\n      <h3>Total Price: ${{ getTotalPrice().toFixed(2) }}</h3>\n    </div>\n  </div>\n\n  <div *ngIf=\"successMessage\" class=\"alert alert-success mt-3\">\n    {{ successMessage }}\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger mt-3\">\n    {{ errorMessage }}\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}