{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  /*  opts = [];*/\n  constructor(_http) {\n    this._http = _http;\n    this.url = environment.apiBaseUrl;\n  }\n  //getData() {\n  //  return this.opts.length ?\n  //    of(this.opts) :\n  //    this._http.get<any>(this.url).pipe(tap(data => this.opts = data));\n  //}\n  getCategories() {\n    return this._http.get(this.url + '/Category/GetCategories');\n  }\n  getCategoryId(id) {\n    return this._http.get(this.url + '/Category/GetCategory' + id);\n  }\n  addCategory(brand) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.post(this.url + '/Category/InsertCategory', brand, httpOptions);\n  }\n  updateCategory(id, category) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.put(`${this.url}/Category/UpdateCategory/${id}`, category, httpOptions);\n  }\n  deleteCategory(id) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this._http.delete(`${this.url}/Category/DeleteCategory/${id}`, httpOptions);\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","CategoryService","constructor","_http","url","apiBaseUrl","getCategories","get","getCategoryId","id","addCategory","brand","httpOptions","headers","post","updateCategory","category","put","deleteCategory","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\category\\category.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\r\n\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n// export class CategoryService {\r\n\r\n//   constructor() { }\r\n// }\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of} from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Category } from './category.model';\r\nimport { RootComponent } from '../root/root.component';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { tap } from \"rxjs/operators\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  url: string = environment.apiBaseUrl\r\n/*  opts = [];*/\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  //getData() {\r\n  //  return this.opts.length ?\r\n  //    of(this.opts) :\r\n  //    this._http.get<any>(this.url).pipe(tap(data => this.opts = data));\r\n  //}\r\n\r\n  getCategories(): Observable<Category[]> {\r\n    return this._http.get<Category[]>(this.url + '/Category/GetCategories');\r\n  }\r\n\r\n  getCategoryId(id: any): Observable<any> {\r\n    return this._http.get<Category[]>(this.url + '/Category/GetCategory' + id);\r\n  }\r\n\r\n  addCategory(brand: Category): Observable<Category> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this._http.post<Category>(this.url + '/Category/InsertCategory', brand, httpOptions);\r\n  }\r\n\r\n  updateCategory(id: number, category: Category): Observable<Category> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this._http.put<Category>(`${this.url}/Category/UpdateCategory/${id}`, category, httpOptions);\r\n  }\r\n  \r\n\r\n  deleteCategory(id: number): Observable<void> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this._http.delete<void>(`${this.url}/Category/DeleteCategory/${id}`, httpOptions);\r\n  }\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAWA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,WAAW,QAAQ,0CAA0C;;;AAMtE,OAAM,MAAOC,eAAe;EAG5B;EACEC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,GAAG,GAAWJ,WAAW,CAACK,UAAU;EAEK;EAEzC;EACA;EACA;EACA;EACA;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAa,IAAI,CAACH,GAAG,GAAG,yBAAyB,CAAC;EACzE;EAEAI,aAAaA,CAACC,EAAO;IACnB,OAAO,IAAI,CAACN,KAAK,CAACI,GAAG,CAAa,IAAI,CAACH,GAAG,GAAG,uBAAuB,GAAGK,EAAE,CAAC;EAC5E;EAEAC,WAAWA,CAACC,KAAe;IACzB,MAAMC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACW,IAAI,CAAW,IAAI,CAACV,GAAG,GAAG,0BAA0B,EAAEO,KAAK,EAAEC,WAAW,CAAC;EAC7F;EAEAG,cAAcA,CAACN,EAAU,EAAEO,QAAkB;IAC3C,MAAMJ,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACc,GAAG,CAAW,GAAG,IAAI,CAACb,GAAG,4BAA4BK,EAAE,EAAE,EAAEO,QAAQ,EAAEJ,WAAW,CAAC;EACrG;EAGAM,cAAcA,CAACT,EAAU;IACvB,MAAMG,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAId,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;IACxF,OAAO,IAAI,CAACI,KAAK,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACf,GAAG,4BAA4BK,EAAE,EAAE,EAAEG,WAAW,CAAC;EAC1F;EAAC,QAAAQ,CAAA,G;qBAlCUnB,eAAe,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfxB,eAAe;IAAAyB,OAAA,EAAfzB,eAAe,CAAA0B,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}