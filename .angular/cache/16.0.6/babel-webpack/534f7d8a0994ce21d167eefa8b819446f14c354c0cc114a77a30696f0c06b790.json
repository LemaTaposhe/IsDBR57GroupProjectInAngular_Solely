{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartItems = [];\n    this.cartCount = new BehaviorSubject(0);\n    this.cartCount$ = this.cartCount.asObservable();\n  }\n  // Add or update product in the cart\n  addToCart(product) {\n    const existingProduct = this.cartItems.find(item => item.productId === product.productId);\n    if (existingProduct) {\n      existingProduct.quantity += product.quantity;\n    } else {\n      this.cartItems.push({\n        ...product,\n        quantity: product.quantity || 1\n      });\n    }\n    this.updateCartCount();\n  }\n  // Update the cart count\n  updateCartCount() {\n    this.cartCountSubject.next(this.cartItems.reduce((total, item) => total + (item.quantity || 1), 0));\n  }\n  // Get all items in the cart\n  getCartItems() {\n    return this.cartItems;\n  }\n  // Get the total number of items in the cart (including quantities)\n  getCartItemCount() {\n    return this.cartCount$;\n  }\n  // Optionally, you might add a method to remove items from the cart\n  removeFromCart(productId) {\n    this.cartItems = this.cartItems.filter(item => item.productId !== productId);\n    this.updateCartCount();\n  }\n  // Optionally, you might add a method to clear the cart\n  clearCart() {\n    this.cartItems = [];\n    this.updateCartCount();\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","cartItems","cartCount","cartCount$","asObservable","addToCart","product","existingProduct","find","item","productId","quantity","push","updateCartCount","cartCountSubject","next","reduce","total","getCartItems","getCartItemCount","removeFromCart","filter","clearCart","_","_2","factory","ɵfac","providedIn"],"sources":["G:\\IsDB- Bisew Class-1\\UI-18-08-24\\UI-Font-01\\src\\app\\cart\\cart.service.ts"],"sourcesContent":["// src/app/services/cart.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Product } from '../product/product.model';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private cartItems: Product[] = [];\r\n  private cartCount = new BehaviorSubject<number>(0);\r\n\r\n  cartCount$ = this.cartCount.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  // Add or update product in the cart\r\n  addToCart(product: Product): void {\r\n    const existingProduct = this.cartItems.find(item => item.productId === product.productId);\r\n    if (existingProduct) {\r\n      existingProduct.quantity += product.quantity;\r\n    } else {\r\n      this.cartItems.push({...product, quantity: product.quantity || 1});\r\n    }\r\n    this.updateCartCount();\r\n  }\r\n\r\n  // Update the cart count\r\n  private updateCartCount(): void {\r\n    this.cartCountSubject.next(this.cartItems.reduce((total, item) => total + (item.quantity || 1), 0));\r\n  }\r\n\r\n  // Get all items in the cart\r\n  getCartItems(): Product[] {\r\n    return this.cartItems;\r\n  }\r\n\r\n  // Get the total number of items in the cart (including quantities)\r\n  getCartItemCount(): Observable<number> {\r\n    return this.cartCount$;\r\n  }\r\n\r\n  // Optionally, you might add a method to remove items from the cart\r\n  removeFromCart(productId: number): void {\r\n    this.cartItems = this.cartItems.filter(item => item.productId !== productId);\r\n    this.updateCartCount();\r\n  }\r\n\r\n  // Optionally, you might add a method to clear the cart\r\n  clearCart(): void {\r\n    this.cartItems = [];\r\n    this.updateCartCount();\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;AAQtC,OAAM,MAAOC,WAAW;EAMtBC,YAAA;IALQ,KAAAC,SAAS,GAAc,EAAE;IACzB,KAAAC,SAAS,GAAG,IAAIJ,eAAe,CAAS,CAAC,CAAC;IAElD,KAAAK,UAAU,GAAG,IAAI,CAACD,SAAS,CAACE,YAAY,EAAE;EAE1B;EAEhB;EACAC,SAASA,CAACC,OAAgB;IACxB,MAAMC,eAAe,GAAG,IAAI,CAACN,SAAS,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAKJ,OAAO,CAACI,SAAS,CAAC;IACzF,IAAIH,eAAe,EAAE;MACnBA,eAAe,CAACI,QAAQ,IAAIL,OAAO,CAACK,QAAQ;KAC7C,MAAM;MACL,IAAI,CAACV,SAAS,CAACW,IAAI,CAAC;QAAC,GAAGN,OAAO;QAAEK,QAAQ,EAAEL,OAAO,CAACK,QAAQ,IAAI;MAAC,CAAC,CAAC;;IAEpE,IAAI,CAACE,eAAe,EAAE;EACxB;EAEA;EACQA,eAAeA,CAAA;IACrB,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAACd,SAAS,CAACe,MAAM,CAAC,CAACC,KAAK,EAAER,IAAI,KAAKQ,KAAK,IAAIR,IAAI,CAACE,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACrG;EAEA;EACAO,YAAYA,CAAA;IACV,OAAO,IAAI,CAACjB,SAAS;EACvB;EAEA;EACAkB,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAAChB,UAAU;EACxB;EAEA;EACAiB,cAAcA,CAACV,SAAiB;IAC9B,IAAI,CAACT,SAAS,GAAG,IAAI,CAACA,SAAS,CAACoB,MAAM,CAACZ,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAKA,SAAS,CAAC;IAC5E,IAAI,CAACG,eAAe,EAAE;EACxB;EAEA;EACAS,SAASA,CAAA;IACP,IAAI,CAACrB,SAAS,GAAG,EAAE;IACnB,IAAI,CAACY,eAAe,EAAE;EACxB;EAAC,QAAAU,CAAA,G;qBA5CUxB,WAAW;EAAA;EAAA,QAAAyB,EAAA,G;WAAXzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}